name: CI/CD without Docker Compose

on:
  push:
    branches:
      - main
      - develop
      - feat/55

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Repository Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Create env File
      - name: Generate .env file
        run: |
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }}" >> .env
          echo "SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_BUKET=${{ secrets.AWS_BUKET }}" >> .env

      # 3. Set up JDK 17 for build
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # OpenJDK distribution
          java-version: '17'

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. Build the JAR file
      - name: Build JAR file with Gradle
        run: |
          export $(cat .env | xargs)
          
          ./gradlew clean build

      # 2. Build Docker Image
      - name: Build Docker image
        run: |
          docker build --platform linux/amd64 -t ajwoong/jangmadang:latest .


      # 5. Push Docker Image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ajwoong/jangmadang:latest


      # 6. SSH into EC2 and Generate .env File
      - name: Generate .env file on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            whoami
#            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" > ~/.env
#            echo "SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }}" >> ~/.env
#            echo "SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }}" >> ~/.env
#            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }}" >> ~/.env
#            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.env
#            echo "AWS_BUKET=${{ secrets.AWS_BUKET }}" >> ~/.env
          debug: true

      # 7. SSH into EC2 and Deploy
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_ACCESS_KEY }}
          port: 22
          script: |
            # Stop the old container (if exists)
            docker stop jangmadang-app || true
            docker rm jangmadang-app || true

            # Pull the latest Docker image
            docker pull ajwoong/jangmadang:latest

            # Run the new container
            docker run -d \
              --name jangmadang-app \
              -p 8080:8080 \
              --env-file ~/.env \
              ajwoong/jangmadang:latest
